get_module_submodule_code=select t1.MODULE_CODE,0 as SUB_MODULE_CODE,t1.DESCRIPTION \
							from COEUS_MODULE t1 \
							where t1.MODULE_CODE in (1,2,3,5,6,7,12) \
							union \
							select t1.MODULE_CODE,t2.SUB_MODULE_CODE,t2.DESCRIPTION \
							from COEUS_MODULE t1 \
							inner join COEUS_SUB_MODULE t2 on t1.MODULE_CODE = t2.MODULE_CODE \
							where t1.MODULE_CODE in (1,2,3,5,6,7,12)

get_questionnaire_data=select * from OSP$QUESTIONNAIRE_QUESTIONS  WHERE QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>> AND QUESTION_ID = <<QUESTION_ID>>

get_questionnaire_answer=SELECT \
						T1.QUESTIONNAIRE_ANSWER_ID,\
						T1.QUESTION_ID,\
						T1.ANSWER_NUMBER, \
						T1.ANSWER,\
						T1.ANSWER_LOOKUP_CODE,\
						T1.EXPLANATION ,\
						T3.QUESTIONNAIRE_ANSWER_ATT_ID 	AS ATTACHMENT_ID,\
						T2.QUESTIONNAIRE_ANS_HEADER_ID \
						FROM  QUEST_ANSWER T1 \
						INNER JOIN QUEST_ANSWER_HEADER T2 ON T1.QUESTIONNAIRE_ANS_HEADER_ID = T2.QUESTIONNAIRE_ANS_HEADER_ID \
						LEFT OUTER JOIN QUEST_ANSWER_ATTACHMENT T3 ON T3.QUESTIONNAIRE_ANSWER_ID = T1.QUESTIONNAIRE_ANSWER_ID \
						WHERE T2.QUESTIONNAIRE_ANS_HEADER_ID = <<AV_QNR_ANS_HEADER_ID>> \
						ORDER BY T1.QUESTIONNAIRE_ANSWER_ID,T1.QUESTION_ID 
	
get_questionnaire_question=  SELECT question_id, question, description, help_link, answer_type, answer_length, no_of_answers, lookup_type,\
							 lookup_name, lookup_field, group_name,group_label, has_condition \
							 FROM   mitkc_questionnaire_question  WHERE  questionnaire_id = <<AV_QUESTIONNAIRE_ID>>    ORDER  BY sort_order 

get_questionnaire_question_answer=SELECT t1.questionnaire_answer_id, \
								 t1.question_id, \
								 t1.answer_number, \
								 t1.answer, \
								 t1.answer_lookup_code, \
								 t1.explanation ,\
								 T3.Questionnaire_Answer_Att_Id AS Attachment_id,\
								 T2.Questionnaire_Ans_Header_Id \
								 FROM  mitkc_questionnaire_answer t1 \
								 INNER JOIN mitkc_questionnaire_ans_header t2 ON t1.questionnaire_ans_header_id = t2.questionnaire_ans_header_id \
								 Left Outer JOIN mitkc_questionnaire_answer_att t3 ON T3.Questionnaire_Answer_Id=T1.Questionnaire_Answer_Id \
								 WHERE t2.module_item_id = <<AV_MODULE_ITEM_ID>>  \
								 and T2.Module_Item_Code = <<AV_MODULE_CODE>> \
								 ORDER BY t1.questionnaire_answer_id,t1.question_id

insert_questionnaire_answer=INSERT INTO QUEST_ANSWER \
							 (questionnaire_answer_id,   \
							  questionnaire_ans_header_id,  \
							  question_id,  \
							 answer_number,  \
							 answer,  \
							 answer_lookup_code,  \
							 explanation,  \
							 update_timestamp,  \
							 update_user)  \
							 VALUES   ( \
							  <<QUESTIONNAIRE_ANSWER_ID>>,  \
							 <<QUESTIONNAIRE_ANS_HEADER_ID>>,  \
							  <<QUESTION_ID>>,  \
							  <<ANSWER_NUMBER>>,  \
							  <<ANSWER>>,  \
							  <<ANSWER_LOOKUP_CODE>>, \
							  <<EXPLANATION>>, \
							  <<UPDATE_TIMESTAMP>>,  \
							  <<UPDATE_USER>>)  

insert_questionnaire_attachment_answer=INSERT INTO QUEST_ANSWER_ATTACHMENT \
										(questionnaire_answer_att_id,	\
										 questionnaire_answer_id,	\
										 attachment,	\
										 file_name,	\
										 content_type,	\
										 update_timestamp,	\
										 update_user)	\
										  VALUES   ( \
										  	<<QUESTIONNAIRE_ANSWER_ATT_ID>>,  \
											<<QUESTIONNAIRE_ANSWER_ID>>,  \
											<<ATTACHMENT>>,  \
											<<FILE_NAME>>,  \
											<<CONTENT_TYPE>>,  \
											<<UPDATE_TIMESTAMP>>,  \
											<<UPDATE_USER>>)

delete_questionnaire_answer=delete from QUEST_ANSWER where question_id = <<QUESTION_ID>>

update_questionnaire_answer= UPDATE  QUEST_ANSWER \
							SET  answer = <<ANSWER>>,  \
							answer_lookup_code = <<ANSWER_LOOKUP_CODE>>,  \
							explanation = <<EXPLANATION>>,  \
							update_timestamp = <<UPDATE_TIMESTAMP>>,  \
							update_user = <<UPDATE_USER>>  \
							WHERE question_id = <<QUESTION_ID>> \
							AND answer_number = <<ANSWER_NUMBER>>

update_questionnaire_complete_flag=UPDATE QUEST_ANSWER_HEADER SET questionnaire_completed_flag = <<QUESTIONNAIRE_COMPLETED_FLAG>> WHERE questionnaire_ans_header_id = <<QUESTIONNAIRE_ANS_HEADER_ID>>  

get_questionnaire_ans_header_id=SELECT questionnaire_ans_header_id  FROM   mitkc_questionnaire_ans_header \
								WHERE  module_item_id = <<MODULE_ITEM_ID>> \
								AND module_item_code = <<MODULE_ITEM_CODE>> \
								AND questionnaire_id = <<QUESTIONNAIRE_ID>> \

insert_questionnaire_ans_header=INSERT INTO QUEST_ANSWER_HEADER \
								(questionnaire_ans_header_id, \
								questionnaire_id,\
								module_item_code,\
								MODULE_SUB_ITEM_CODE,\
								MODULE_ITEM_KEY,\
								MODULE_SUB_ITEM_KEY,\
								questionnaire_completed_flag,\
								update_timestamp,\
								update_user) \
								VALUES (<<QUESTIONNAIRE_ANS_HEADER_ID>>,\
								<<QUESTIONNAIRE_ID>>,\
								<<MODULE_ITEM_CODE>>,\
								<<MODULE_SUB_ITEM_CODE>>,\
								<<MODULE_ITEM_KEY>>,\
								<<MODULE_SUB_ITEM_KEY>>,\
								<<QUESTIONNAIRE_COMPLETED_FLAG>>,\
								<<UPDATE_TIMESTAMP>>,\
								<<UPDATE_USER>>)

get_max_questionnaire_ans_header_id=select max(questionnaire_ans_header_id) as questionnaire_ans_header_id  from mitkc_questionnaire_ans_header 

get_applicable_questionnaire=select t2.questionnaire_id, \
								t2.QUESTIONNAIRE_NUMBER, \
								t2.VERSION_NUMBER, \
							t2.questionnaire, \
							t3.questionnaire_ans_header_id, \
							t3.questionnaire_completed_flag, \
							t1.rule_id, \
							t1.IS_MANDATORY from quest_usage t1 \
							inner join quest_header t2 on t1.QUESTIONNAIRE_ID = t2.questionnaire_id  \
							left outer join quest_answer_header t3 on t1.QUESTIONNAIRE_ID = t3.questionnaire_id  \
							          and t1.MODULE_ITEM_CODE = t3.module_item_code \
							          and t3.module_item_key = <<MODULE_ITEM_KEY>> \
							          and t3.module_sub_item_key = <<MODULE_SUB_ITEM_KEY>> \
							where t1.module_item_code = <<MODULE_ITEM_CODE>> \
							and   t1.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>> \
							AND t2.IS_FINAL = 'Y'

get_questionnaire_group = select QUEST_GROUP_TYPE_CODE,	 DESCRIPTION from QUEST_GROUP_TYPE

get_all_questionnaire= select 	questionnaire_id ,questionnaire_number,\
							    version_number as QUESTIONNAIRE_VERSION,\
								questionnaire as QUESTIONNAIRE_LABEL,\
								QUEST_GROUP_TYPE_CODE	from QUEST_HEADER ORDER BY UPDATE_TIMESTAMP DESC

get_questionnaire_header_info=SELECT 	QUESTIONNAIRE_ID,\
								        QUESTIONNAIRE_NUMBER,\
										VERSION_NUMBER AS QUESTIONNAIRE_VERSION,\
										QUESTIONNAIRE AS QUESTIONNAIRE_NAME,\
										DESCRIPTION as QUESTIONNAIRE_DESCRIPTION,\
										QUEST_GROUP_TYPE_CODE,\
								        IS_FINAL,\
										UPDATE_USER,\
										UPDATE_TIMESTAMP FROM QUEST_HEADER	WHERE QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>>

get_questionnaire_header_usage=	SELECT 	QUESTIONNAIRE_USAGE_ID, \
										QUESTIONNAIRE_ID, \
										QUESTIONNAIRE_LABEL,\
										MODULE_ITEM_CODE,\
										MODULE_SUB_ITEM_CODE,\
										QUESTIONNAIRE_LABEL,\
										IS_MANDATORY,\
										RULE_ID	FROM QUEST_USAGE WHERE QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>>

get_questionnaire_questions =SELECT \
								QUESTION_ID,\
								QUESTION_NUMBER,\
								QUESTION_VERSION_NUMBER,\
								SORT_ORDER,\
								QUESTION,\
								DESCRIPTION,\
								PARENT_QUESTION_ID,\
								HELP_LINK,\
								ANSWER_TYPE,\
								ANSWER_LENGTH,\
								NO_OF_ANSWERS,\
								LOOKUP_TYPE,\
								LOOKUP_NAME,\
								LOOKUP_FIELD,\
								GROUP_NAME,\
								GROUP_LABEL,\
								HAS_CONDITION,\
								UPDATE_USER,\
								UPDATE_TIMESTAMP\ FROM QUEST_QUESTION WHERE questionnaire_id = <<QUESTIONNAIRE_ID>>	ORDER  BY SORT_ORDER



get_questionnaire_options=SELECT t1.question_option_id,  \
									t1.question_id,  \
									t1.option_number,  \
									t1.option_label,  \
									t1.require_explanation,  \
									t1.explantion_label  \
									FROM   QUEST_QUESTION_OPTION t1  \
									INNER  JOIN QUEST_QUESTION t2 ON t1.question_id = t2.question_id  \
									WHERE  t2.questionnaire_id = <<AV_QUESTIONNAIRE_ID>> \
									ORDER  BY t1.question_option_id,t1.question_id,t1.option_number 

								
get_questionnaire_conditions=SELECT t1.QUESTION_CONDITION_ID,  \
									t1.question_id,  \
									t1.CONDITION_TYPE,  \
									t1.CONDITION_VALUE,  \
									t1.GROUP_NAME, \
									t1.UPDATE_USER  \
									FROM   QUEST_QUESTION_CONDITION t1  \
									INNER  JOIN QUEST_QUESTION t2 ON t1.question_id = t2.question_id  \
									WHERE  t2.questionnaire_id = <<AV_QUESTIONNAIRE_ID>> \
									ORDER  BY t1.QUESTION_CONDITION_ID,t1.question_id
																	
get_max_questionnaire_id=select questionnaire_id from quest_column_nextvalue

update_max_questionnaire_id=update quest_column_nextvalue set questionnaire_id = <<questionnaire_id>>

get_max_questionnaire_number=select questionnaire_number from quest_column_nextvalue

update_max_questionnaire_number=update quest_column_nextvalue set questionnaire_number = <<questionnaire_number>>

update_max_questionnaire_version_number=select max(version_number) from quest_header where questionnaire_number = <<questionnaire_number>>



get_max_question_id=select question_id from quest_column_nextvalue

update_max_question_id=update quest_column_nextvalue set question_id = <<question_id>>


get_max_question_number=select question_number from quest_column_nextvalue

update_max_question_number=update quest_column_nextvalue set question_number = <<question_number>>



get_max_question_condition_id=select question_condition_id from quest_column_nextvalue

update_max_question_condition_id=update quest_column_nextvalue set question_condition_id = <<question_condition_id>>

get_max_question_option_id=select question_option_id from quest_column_nextvalue

update_max_question_option_id=update quest_column_nextvalue set question_option_id = <<question_option_id>>

get_max_questionnaire_ans_header_id=select questionnaire_ans_header_id from quest_column_nextvalue

update_max_questionnaire_ans_header_id=update quest_column_nextvalue set questionnaire_ans_header_id = <<questionnaire_ans_header_id>>

get_max_questionnaire_answer_id=select questionnaire_answer_id from quest_column_nextvalue

update_max_questionnaire_answer_id=update quest_column_nextvalue set questionnaire_answer_id = <<questionnaire_answer_id>>

get_max_questionnaire_answer_att_id=select questionnaire_answer_att_id from quest_column_nextvalue

update_max_questionnaire_answer_att_id=update quest_column_nextvalue set questionnaire_answer_att_id = <<questionnaire_answer_att_id>>

get_max_questionnaire_usage_id=select questionnaire_usage_id from quest_column_nextvalue

update_max_questionnaire_usage_id=update quest_column_nextvalue set questionnaire_usage_id = <<questionnaire_usage_id>>	



insert_questionnaire_header=insert into quest_header(\
								questionnaire_id,\
								questionnaire_number,\
								version_number,\
								questionnaire,\
								description,\
								update_timestamp,\
								update_user,\
								quest_group_type_code,\
								is_final\
								)\
								values(\
								<<questionnaire_id>>,\
								<<questionnaire_number>>,\
								<<version_number>>,\
								<<questionnaire>>,\
								<<description>>,\
								<<update_timestamp>>,\
								<<update_user>>,\
								<<quest_group_type_code>>,\
								<<is_final>>\
								)
update_questionnaire_header=update quest_header set questionnaire = <<questionnaire>>,\
							description = <<description>>,\
							update_timestamp = <<update_timestamp>>,\
							update_user = <<update_timestamp>>,\
							quest_group_type_code = <<quest_group_type_code>>,\
							is_final = <<is_final>> \
							where questionnaire_id = <<questionnaire_id>>
							
insert_question=insert into quest_question(\
					question_id,\
					question_number,\
					question_version_number,\
					questionnaire_id,\
					sort_order,\
					question,\
					description,\
					parent_question_id,\
					help_link,\
					answer_type,\
					answer_length,\
					no_of_answers,\
					lookup_type,\
					lookup_name,\
					lookup_field,\
					group_name,\
					group_label,\
					has_condition,\
					update_timestamp,\
					update_user\
					)\
					values(\
					<<question_id>>,\
					<<question_number>>,\
					<<question_version_number>>,\
					<<questionnaire_id>>,\
					<<sort_order>>,\
					<<question>>,\
					<<description>>,\
					<<parent_question_id>>,\
					<<help_link>>,\
					<<answer_type>>,\
					<<answer_length>>,\
					<<no_of_answers>>,\
					<<lookup_type>>,\
					<<lookup_name>>,\
					<<lookup_field>>,\
					<<group_name>>,\
					<<group_label>>,\
					<<has_condition>>,\
					<<update_timestamp>>,\
					<<update_user>>\
					)						
update_question=update quest_question set question = <<question>>, \
				description = <<description>>,\
				parent_question_id = <<parent_question_id>>,\
				help_link = <<help_link>>,\
				answer_type = <<answer_type>>,\
				answer_length = <<answer_length>>,\
				no_of_answers = <<no_of_answers>>,\
				lookup_type = <<lookup_type>>,\
				lookup_name = <<lookup_name>>,\
				lookup_field = <<lookup_field>>,\
				group_name = <<group_name>>,\
				group_label = <<group_label>>,\
				has_condition = <<has_condition>>,\
				update_timestamp = <<update_timestamp>>,\
				update_user = <<update_user>> \
				where question_id = <<question_id>>
				
insert_question_condition=insert into quest_question_condition(\
							question_condition_id,\
							question_id,\
							condition_type,\
							condition_value,\
							group_name,\
							update_timestamp,\
							update_user\
							)\
							values(\
							<<question_condition_id>>,\
							<<question_id>>,\
							<<condition_type>>,\
							<<condition_value>>,\
							<<group_name>>,\
							<<update_timestamp>>,\
							<<update_user>>\
							)
									
update_question_condition=update quest_question_condition set condition_type = <<condition_type>>,\
								condition_value = <<condition_value>>,\
								group_name = <<group_name>>,\
								update_timestamp = <<update_timestamp>>,\
								update_user = <<update_user>>\
							where question_condition_id = <<question_condition_id>>		
							
insert_question_option=insert into quest_question_option(\
						question_option_id,\
						question_id,\
						option_number,\
						option_label,\
						require_explanation,\
						explantion_label,\
						update_timestamp,\
						update_user\
						)\
						values(\
						<<question_option_id>>,\
						<<question_id>>,\
						<<option_number>>,\
						<<option_label>>,\
						<<require_explanation>>,\
						<<explantion_label>>,\
						<<update_timestamp>>,\
						<<update_user>>\
						)							
update_question_option= update quest_question_option set option_label = <<option_label>>,\
							require_explanation = <<require_explanation>>,\
							explantion_label = <<explantion_label>>,\
							update_timestamp = <<update_timestamp>>,\
							update_user = <<update_user>>\
						where question_option_id = <<question_option_id>>							
					
delete_questionnaire_question= DELETE FROM quest_question  WHERE question_id = <<question_id>>
delete_question_condition= DELETE FROM quest_question_condition  WHERE question_id = <<question_id>>
delete_question_option= DELETE FROM quest_question_option  WHERE question_id = <<question_id>>

delete_condition=DELETE FROM quest_question_condition  WHERE question_condition_id = <<question_condition_id>>
delete_option=DELETE FROM quest_question_option  WHERE question_option_id = <<question_option_id>>

insert_questionnaire_usage = INSERT INTO QUEST_USAGE(\
								QUESTIONNAIRE_USAGE_ID,\
								MODULE_ITEM_CODE,\
								MODULE_SUB_ITEM_CODE,\
								QUESTIONNAIRE_ID,\
								QUESTIONNAIRE_LABEL,\
								IS_MANDATORY,\
								RULE_ID,\
								UPDATE_TIMESTAMP,\
								UPDATE_USER\
								)\
								VALUES(\
								<<QUESTIONNAIRE_USAGE_ID>>,\
								<<MODULE_ITEM_CODE>>,\
								<<MODULE_SUB_ITEM_CODE>>,\
								<<QUESTIONNAIRE_ID>>,\
								<<QUESTIONNAIRE_LABEL>>,\
								<<IS_MANDATORY>>,\
								<<RULE_ID>>,\
								<<UPDATE_TIMESTAMP>>,\
								<<UPDATE_USER>>\
								)
update_questionnaire_usage =UPDATE QUEST_USAGE SET MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>>,\
							MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>>,\
							QUESTIONNAIRE_LABEL = <<QUESTIONNAIRE_LABEL>>,\
							IS_MANDATORY = <<IS_MANDATORY>>,\
							RULE_ID = <<RULE_ID>>,\
							UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,\
							UPDATE_USER = <<UPDATE_USER>>\
							WHERE QUESTIONNAIRE_USAGE_ID = <<QUESTIONNAIRE_USAGE_ID>>

delete_questionnaire_usage = DELETE FROM QUEST_USAGE WHERE QUESTIONNAIRE_USAGE_ID = <<QUESTIONNAIRE_USAGE_ID>>
get_complete_look_up= select UNIT_NUMBER from BUSINESS_RULES
		  
get_questionnaire_attachment = SELECT QUESTIONNAIRE_ANSWER_ATT_ID, \
								QUESTIONNAIRE_ANSWER_ID, \
								ATTACHMENT, \
								FILE_NAME, \
								CONTENT_TYPE FROM QUEST_ANSWER_ATTACHMENT \
								WHERE QUESTIONNAIRE_ANSWER_ATT_ID =	<<AV_QUESTIONNAIRE_ANS_ATTACHMENT_ID>>
								
update_questionnaire_attachment_answer= UPDATE  QUEST_ANSWER_ATTACHMENT \
							SET  attachment = <<ATTACHMENT>>,  \
							file_name = <<FILE_NAME>>,  \
							content_type = <<CONTENT_TYPE>>,  \
							update_timestamp = <<UPDATE_TIMESTAMP>>,  \
							update_user = <<UPDATE_USER>>  \
							WHERE questionnaire_answer_att_id = <<QUESTIONNAIRE_ANSWER_ATT_ID>> 	
							
delete_questionnaire_attachment_answer=DELETE FROM QUEST_ANSWER_ATTACHMENT WHERE questionnaire_answer_att_id = <<QUESTIONNAIRE_ANSWER_ATT_ID>>			



#............................................................



get_max_wrklfw_business_rule_id=select RULE_ID from WORKFLOW_COLUMN_NEXTVALUE

update_max_wrklfw_business_rule_id=update WORKFLOW_COLUMN_NEXTVALUE set RULE_ID = <<RULE_ID>>

get_max_rule_expression_id=select RULES_EXPERSSION_ID from WORKFLOW_COLUMN_NEXTVALUE

update_max_rule_expression_id=update WORKFLOW_COLUMN_NEXTVALUE set RULES_EXPERSSION_ID = <<RULES_EXPERSSION_ID>>

get_business_rule= SELECT  \
                   t1.RULE_ID ,  \
                   t1.DESCRIPTION ,  \
                   t1.RULE_TYPE,  \
                   t1.RULE_CATEGORY, \
                   t2.UNIT_NAME, \
                   t1.UNIT_NUMBER,  \
                   t3.DESCRIPTION AS MODULE_NAME,  \
                   t1.MODULE_CODE,  \
                   t1.SUB_MODULE_CODE,  \
                   t1.IS_ACTIVE,  \
                   t1.UPDATE_TIMESTAMP,  \
                   t1.UPDATE_USER,  \
                   t1.RULE_EXPRESSION,  \
                   t1.MAP_ID, \
                   t4.description as map_name,\
                   t1.NOTIFICATION_ID, \
                   t1.USER_MESSAGE,  \
                   t1.RULE_EVALUATION_ORDER \
                   FROM BUSINESS_RULES t1 \
                   left outer join UNIT t2 on t1.UNIT_NUMBER = t2.UNIT_NUMBER \
                   left outer join coeus_module t3 on t1.MODULE_CODE = t3.MODULE_CODE \
                   left outer join workflow_map t4 on t1.map_id= t4.map_id


get_notifications = 	SELECT NOTIFICATION_TYPE_ID,\
						MODULE_CODE,\
						SUB_MODULE_CODE,\
						DESCRIPTION,\
						SUBJECT,\
						MESSAGE,\
						PROMPT_USER,\
						IS_ACTIVE,\
						CREATE_USER,\
						CREATE_TIMESTAMP,\
						UPDATE_USER,\
						UPDATE_TIMESTAMP FROM NOTIFICATION_TYPE 

insert_business_rule=	INSERT INTO BUSINESS_RULES( \
						RULE_ID, \
						DESCRIPTION, \
						RULE_TYPE, \
						RULE_CATEGORY, \
						UNIT_NUMBER, \
						MODULE_CODE, \
						SUB_MODULE_CODE, \
						UPDATE_TIMESTAMP, \
						UPDATE_USER, \
						IS_ACTIVE, \
						RULE_EXPRESSION, \
						MAP_ID, \
						NOTIFICATION_ID, \
						USER_MESSAGE, \
						RULE_EVALUATION_ORDER \
						) \
						VALUES( \
						<<RULE_ID>>, \
						<<DESCRIPTION>>, \
						<<RULE_TYPE>>,\
						<<RULE_CATEGORY>>,\
						<<UNIT_NUMBER>>, \
						<<MODULE_CODE>>, \
						<<SUB_MODULE_CODE>>, \
						<<UPDATE_TIMESTAMP>>, \
						<<UPDATE_USER>>, \
						<<IS_ACTIVE>>, \
						<<RULE_EXPRESSION>>, \
						<<MAP_ID>>, \
						<<NOTIFICATION_ID>>, \
						<<USER_MESSAGE>>, \
						<<RULE_EVALUATION_ORDER>> \
						)

get_max_wrklfw_business_rule_order_id =  SELECT MAX(RULE_EVALUATION_ORDER) as id \
				         FROM BUSINESS_RULES \
                  			 WHERE SUB_MODULE_CODE = <<SUB_MODULE_CODE>> \
                  			 AND UNIT_NUMBER = <<UNIT_NUMBER>> \
                  			 AND MODULE_CODE = <<MODULE_CODE>>	\
                  			 AND RULE_TYPE = <<RULE_TYPE>>	
                  						 
insert_business_rule_expression = INSERT INTO BUSINESS_RULES_EXPERSSION( \
                                  RULES_EXPERSSION_ID, \
                                  RULE_ID, \
                                  EXPRESSION_NUMBER, \
                                  EXPRESSION_TYPE_CODE, \
                                  LVALUE, \
                                  CONDITION_OPERATOR, \
                                  RVALUE, \
                                  UPDATE_TIMESTAMP, \
                                  UPDATE_USER,\
                                  PARENT_EXPRESSION_NUMBER \
                                  ) \
                                  VALUES( \
                                  <<RULES_EXPERSSION_ID>>, \
                                  <<RULE_ID>>, \
                                  <<EXPRESSION_NUMBER>>, \
                                  <<EXPRESSION_TYPE_CODE>>, \
                                  <<LVALUE>>, \
                                  <<CONDITION_OPERATOR>>, \
                                  <<RVALUE>>, \
                                  <<UPDATE_TIMESTAMP>>, \
                                  <<UPDATE_USER>>,\
                                  <<PARENT_EXPRESSION_NUMBER>>\
                                  )	

update_business_rule =	UPDATE BUSINESS_RULES SET DESCRIPTION = <<DESCRIPTION>>,\
						RULE_TYPE = <<RULE_TYPE>>,\
						RULE_CATEGORY = <<RULE_CATEGORY>>, \
						UNIT_NUMBER = <<UNIT_NUMBER>>, \
						MODULE_CODE = <<MODULE_CODE>>, \
						SUB_MODULE_CODE = <<SUB_MODULE_CODE>>, \
						UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
						UPDATE_USER = <<UPDATE_USER>>, \
						IS_ACTIVE = <<IS_ACTIVE>>,\
						RULE_EXPRESSION = <<RULE_EXPRESSION>>, \
						MAP_ID = <<MAP_ID>>, \
						NOTIFICATION_ID = <<NOTIFICATION_ID>>, \
						USER_MESSAGE = <<USER_MESSAGE>>, \
						RULE_EVALUATION_ORDER = <<RULE_EVALUATION_ORDER>> \
						WHERE RULE_ID = <<RULE_ID>>

update_business_rule_expression =  update BUSINESS_RULES_EXPERSSION set EXPRESSION_NUMBER = <<EXPRESSION_NUMBER>>, \
			  					   EXPRESSION_TYPE_CODE = <<EXPRESSION_TYPE_CODE>>,\
								   LVALUE = <<LVALUE>>, \
								   CONDITION_OPERATOR = <<CONDITION_OPERATOR>>, \
								   RVALUE = <<RVALUE>>,\
								   UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
								   UPDATE_USER = <<UPDATE_USER>> ,\
								   PARENT_EXPRESSION_NUMBER = <<PARENT_EXPRESSION_NUMBER>> \
								   WHERE RULES_EXPERSSION_ID = <<RULES_EXPERSSION_ID>> and RULE_ID = <<RULE_ID>>	

inactivate_business_rule = UPDATE BUSINESS_RULES SET IS_ACTIVE = <<IS_ACTIVE>>, \
						UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
						UPDATE_USER = <<UPDATE_USER>> \
						WHERE RULE_ID = <<RULE_ID>>

get_rule_variable_details = SELECT VARIABLE_NAME,\
			    MODULE_CODE,\
			    SUB_MODULE_CODE,\
			    DESCRIPTION,\
			    TABLE_NAME,\
			    COLUMN_NAME,\
			    SHOW_LOOKUP,\
			    UPDATE_TIMESTAMP,\
			    UPDATE_USER,\
			    LOOKUP_WINDOW_NAME FROM BUSINESS_RULE_VARIABLE \
			    where MODULE_CODE = <<MODULE_ITEM_CODE>> and SUB_MODULE_CODE = <<MODULE_SUB_ITEM_CODE>>

get_rule_function_details = SELECT FUNCTION_NAME,\
			    MODULE_CODE,\
			    SUB_MODULE_CODE,\
			    DESCRIPTION,\
			    DB_FUNCTION_NAME,\
			    UPDATE_TIMESTAMP,\
			    UPDATE_USER FROM BUSINESS_RULE_FUNCTION	\
			    where MODULE_CODE = <<MODULE_ITEM_CODE>> and SUB_MODULE_CODE = <<MODULE_SUB_ITEM_CODE>>	

get_rule_question_details =  SELECT T1.QUESTION_ID,\
			     T1.QUESTION_NUMBER,\
			     T1.QUESTION_VERSION_NUMBER,\
			     T1.QUESTIONNAIRE_ID,\
			     T1.SORT_ORDER,\
			     T1.QUESTION,\
			     T1.DESCRIPTION,\
			     T1.PARENT_QUESTION_ID,\
			     T1.HELP_LINK,\
			     T2.QUESTIONNAIRE_LABEL,\
			     T1.ANSWER_TYPE,\
			     T1.ANSWER_LENGTH,\
			     T1.NO_OF_ANSWERS,\
			     T1.LOOKUP_TYPE,\
			     T1.LOOKUP_NAME,\
			     T1.LOOKUP_FIELD,\
			     T1.GROUP_NAME,\
			     T1.GROUP_LABEL,\
			     T1.HAS_CONDITION,\
			     T1.UPDATE_TIMESTAMP,\
			     T1.UPDATE_USER,\
			     T2.QUESTIONNAIRE_LABEL||'-'||T1.QUESTION AS QUESTION_VALUE FROM QUEST_QUESTION T1 \
			     INNER JOIN QUEST_USAGE T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID \
			     where t2.module_item_code = <<MODULE_ITEM_CODE>> and t2.module_sub_item_code = <<MODULE_SUB_ITEM_CODE>>  	

get_rule_by_id=    SELECT \
                   t1.DESCRIPTION , \
                   t1.RULE_TYPE, \
                   t1.RULE_CATEGORY, \
                   t2.UNIT_NAME, \
                   t1.UNIT_NUMBER, \
                   t3.DESCRIPTION AS MODULE_NAME, \
                   t1.MODULE_CODE, \
                   t1.SUB_MODULE_CODE, \
                   t1.IS_ACTIVE, \
                   t1.UPDATE_TIMESTAMP, \
                   t1.UPDATE_USER, \
                   t1.RULE_EXPRESSION, \
                   t1.MAP_ID, \
	           t4.DESCRIPTION as MAP_DESCRIPTION ,\
		   t1.NOTIFICATION_ID, \
		   t5.DESCRIPTION as NOTIFICATION_DESCRIPTION, \
	           t1.USER_MESSAGE, \
		   t1.RULE_EVALUATION_ORDER \
		   FROM BUSINESS_RULES t1 \
                   inner join UNIT t2 on t1.UNIT_NUMBER = t2.UNIT_NUMBER \
                   inner join coeus_module t3 on t1.MODULE_CODE = t3.MODULE_CODE \
                   left outer join WORKFLOW_MAP t4 on t1.MAP_ID = t4.MAP_ID \
                   left outer join NOTIFICATION_TYPE t5 on t1.NOTIFICATION_ID = t5.NOTIFICATION_TYPE_ID \
                   WHERE t1.RULE_ID =<<RULE_ID>>  

get_ruleexpression_by_id= SELECT \
			  RULES_EXPERSSION_ID , \
			  EXPRESSION_NUMBER , \
			  EXPRESSION_TYPE_CODE , \
		          LVALUE , \
			  CONDITION_OPERATOR , \
			  RVALUE , \
			  UPDATE_TIMESTAMP , \
		          UPDATE_USER ,\
			  PARENT_EXPRESSION_NUMBER \
                          FROM BUSINESS_RULES_EXPERSSION WHERE RULE_ID =<<RULE_ID>> 

get_look_up_details =	SELECT \
                        TABLE_NAME, \
						COLUMN_NAME ,\
						OTHERS_DISPLAY_COLUMNS \
                        FROM LOOKUP_WINDOW \
                        WHERE LOOKUP_WINDOW_NAME = <<LOOKUP_WINDOW_NAME>> 

get_question_details_by_id = SELECT QUESTION_NUMBER,\
			     QUESTION_VERSION_NUMBER,\
			     QUESTIONNAIRE_ID,\
			     SORT_ORDER,\
			     QUESTION,\
			     DESCRIPTION,\
			     PARENT_QUESTION_ID,\
			     HELP_LINK,\
			     ANSWER_TYPE,\
			     ANSWER_LENGTH,\
			     NO_OF_ANSWERS,\
			     LOOKUP_TYPE,\
			     LOOKUP_NAME,\
			     LOOKUP_FIELD,\
			     GROUP_NAME,\
			     GROUP_LABEL,\
			     HAS_CONDITION,\
			     UPDATE_TIMESTAMP,\
			     UPDATE_USER FROM QUEST_QUESTION	\
			     WHERE QUESTION_ID = <<QUESTION_ID>>	

get_option_details_by_id = SELECT t1.QUESTION_NUMBER,\
             		   t2.OPTION_LABEL FROM QUEST_QUESTION	t1 \
			   INNER JOIN QUEST_QUESTION_OPTION t2 on t1.QUESTION_ID = t2.QUESTION_ID \
			   WHERE t1.QUESTION_ID = <<QUESTION_ID>>

delete_rule_expression_by_id = 	DELETE FROM BUSINESS_RULES_EXPERSSION WHERE RULES_EXPERSSION_ID = <<RULES_EXPERSSION_ID>>	

update_rule_order = UPDATE BUSINESS_RULES SET RULE_EVALUATION_ORDER = <<RULE_EVALUATION_ORDER>> \
 		    WHERE  RULE_ID = <<RULE_ID>> 

get_max_wrklfw_map_map_id=select MAP_ID from WORKFLOW_COLUMN_NEXTVALUE

update_max_wrklfw_map_map_id=update WORKFLOW_COLUMN_NEXTVALUE set MAP_ID = <<MAP_ID>>

get_max_wrklfw_map_detail_map_id=select MAP_DETAIL_ID from WORKFLOW_COLUMN_NEXTVALUE

update_max_wrklfw_map_detail_map_id=update WORKFLOW_COLUMN_NEXTVALUE set MAP_DETAIL_ID = <<MAP_DETAIL_ID>>

get_workflow_map = SELECT T1.MAP_ID, \
		   T1.DESCRIPTION, \
		   T1.MAP_TYPE,\
	           T1.UNIT_NUMBER,\
		   T2.UNIT_NAME AS UNIT_NAME, \
	           T1.UPDATE_USER,\
		   T1.UPDATE_TIMESTAMP	FROM WORKFLOW_MAP T1 \
		   LEFT OUTER JOIN UNIT T2 ON T1.UNIT_NUMBER = T2.UNIT_NUMBER	

get_role_description = SELECT ROLE_TYPE_CODE,DESCRIPTION FROM PERSON_ROLE_TYPE

get_map_by_id =  SELECT \
                 T1.DESCRIPTION, \
		 T1.MAP_TYPE,\
	       	 T1.UPDATE_USER,\
		 T1.MAP_ID , \
		 T1.UNIT_NUMBER, \
		 T2.UNIT_NAME AS UNIT_NAME, \
		 T1.UPDATE_TIMESTAMP \
                 FROM WORKFLOW_MAP T1 \
                 LEFT OUTER JOIN UNIT T2 ON T1.UNIT_NUMBER = T2.UNIT_NUMBER \
                 WHERE MAP_ID = <<MAP_ID>> 

get_map_details_by_id = SELECT \
                        T1.MAP_DETAIL_ID , \
                        T1.MAP_ID , \
                        T1.APPROVAL_STOP_NUMBER, \
                        T1.APPROVER_NUMBER,  \
                        T1.APPROVER_PERSON_ID, \
                        T1.PRIMARY_APPROVER_FLAG, \
                        T1.IS_ROLE, \
                        T1.ROLE_TYPE_CODE, \
                        T1.DESCRIPTION, \
                        T3.FULL_NAME AS FULL_NAME, \
                        T2.DESCRIPTION AS APPROVER_NAME, \
                        T1.UPDATE_TIMESTAMP, \
                        T1.UPDATE_USER \
                        FROM WORKFLOW_MAP_DETAIL T1 \
                        LEFT OUTER JOIN PERSON_ROLE_TYPE T2 ON T1.ROLE_TYPE_CODE = T2.ROLE_TYPE_CODE \
                        LEFT OUTER JOIN PERSON T3 ON T1.APPROVER_PERSON_ID = T3.PERSON_ID \
                        WHERE MAP_ID = <<MAP_ID>>

delete_map_details = DELETE FROM WORKFLOW_MAP_DETAIL WHERE MAP_ID = <<MAP_ID>>

delete_map= DELETE FROM WORKFLOW_MAP WHERE MAP_ID = <<MAP_ID>>

delete_map_detail_by_id = DELETE FROM WORKFLOW_MAP_DETAIL WHERE MAP_DETAIL_ID = <<MAP_DETAIL_ID>>

insert_map =  INSERT INTO WORKFLOW_MAP( \
	      MAP_ID, \
	      DESCRIPTION, \
	      MAP_TYPE, \
	      UPDATE_TIMESTAMP, \
	      UNIT_NUMBER, \
	      UPDATE_USER \
	      ) \
	      VALUES( \
	      <<MAP_ID>>, \
	      <<DESCRIPTION>>, \
	      <<MAP_TYPE>>,\
	      <<UPDATE_TIMESTAMP>>, \
	      <<UNIT_NUMBER>>, \
	      <<UPDATE_USER>> \
	     )

insert_map_detail =  INSERT INTO WORKFLOW_MAP_DETAIL( \
		     MAP_DETAIL_ID, \
		     MAP_ID, \
		     APPROVAL_STOP_NUMBER, \
		     APPROVER_NUMBER, \
		     APPROVER_PERSON_ID, \
		     PRIMARY_APPROVER_FLAG, \
		     IS_ROLE, \
		     ROLE_TYPE_CODE, \
		     DESCRIPTION, \
	             UPDATE_TIMESTAMP, \
		     UPDATE_USER \
		     ) \
		     VALUES( \
		     <<MAP_DETAIL_ID>>, \
		     <<MAP_ID>>, \
		     <<APPROVAL_STOP_NUMBER>>, \
		     <<APPROVER_NUMBER>>,\
		     <<APPROVER_PERSON_ID>>, \
		     <<PRIMARY_APPROVER_FLAG>>, \
		     <<IS_ROLE>>,\
		     <<ROLE_TYPE_CODE>>, \
		     <<DESCRIPTION>>,\
		     <<UPDATE_TIMESTAMP>>, \
		     <<UPDATE_USER>> \
		     )

update_map_by_id =  update WORKFLOW_MAP set DESCRIPTION = <<DESCRIPTION>>,\
		    MAP_TYPE = <<MAP_TYPE>>,\
		    UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,\
	            UPDATE_USER = <<UPDATE_USER>>,\
		    UNIT_NUMBER = <<UNIT_NUMBER>>\
	            WHERE MAP_ID = <<MAP_ID>>

update_map_detail_by_id = update WORKFLOW_MAP_DETAIL set APPROVAL_STOP_NUMBER = <<APPROVAL_STOP_NUMBER>>, \
			  APPROVER_NUMBER = <<APPROVER_NUMBER>>,\
			  APPROVER_PERSON_ID = <<APPROVER_PERSON_ID>>, \
			  PRIMARY_APPROVER_FLAG = <<PRIMARY_APPROVER_FLAG>>, \
			  IS_ROLE = <<IS_ROLE>>,\
			  ROLE_TYPE_CODE = <<ROLE_TYPE_CODE>>, \
			  DESCRIPTION = <<DESCRIPTION>>,\
			  UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
			  UPDATE_USER = <<UPDATE_USER>> \
			  WHERE MAP_DETAIL_ID = <<MAP_DETAIL_ID>> and MAP_ID = <<MAP_ID>>

get_all_units = SELECT UNIT_NUMBER,UNIT_NAME FROM UNIT

get_is_map_used = SELECT COUNT(MAP_ID) AS COUNT FROM WORKFLOW_DETAIL WHERE MAP_ID = <<MAP_ID>>

get_variable_lookup_details = SELECT T2.TABLE_NAME,T2.COLUMN_NAME,T2.OTHERS_DISPLAY_COLUMNS \
							FROM BUSINESS_RULE_VARIABLE T1  \
							INNER JOIN LOOKUP_WINDOW T2 ON T1.LOOKUP_WINDOW_NAME = T2.LOOKUP_WINDOW_NAME \
							WHERE T1.VARIABLE_NAME = <<VARIABLE_NAME>>
							
get_business_rule_for_questionnaire = SELECT RULE_ID,DESCRIPTION AS RULE \
									  FROM BUSINESS_RULES \
									  WHERE RULE_TYPE = 'Q' \
									  AND MODULE_CODE = <<MODULE_CODE>> \
									  AND SUB_MODULE_CODE = <<SUB_MODULE_CODE>>	
